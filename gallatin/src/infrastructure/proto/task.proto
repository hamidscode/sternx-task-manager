syntax = "proto3";

package task;


service TaskService {
  rpc CreateTask (CreateTaskRequest) returns (OneTaskResponse) {}
  rpc GetTaskById (GetTaskByIdRequest) returns (OneTaskResponse) {}
  rpc UpdateTask (UpdateTaskRequest) returns (UpdateTaskResponse) {}
  rpc DeleteTask (DeleteTaskRequest) returns (UpdateTaskResponse) {}
  rpc DestroyTask (DestroyTaskRequest) returns (DestroyTaskResponse) {}
  rpc GetAllTasks (GetAllTasksRequest) returns (GetAllTasksResponse) {}
}

message Meta {
  int32 status = 1;
  optional string message = 2;
}

message Task {
  string id = 1;
  optional string parentId = 2;
  string title = 3;
  string description = 4;
  string createdAt = 5;
  optional string updatedAt = 6;
  optional string deletedAt = 7;
  repeated Task subTasks = 8;
}

message CreateTaskRequest {
  string title = 1;
  string description = 2;
  optional string parentId = 3;
}

message OneTaskResponse {
  Meta meta = 1;
  optional Task task = 2;
}

message GetTaskByIdRequest {
  string id = 1;
  optional bool includeSubTasks = 3;
}

message UpdateTaskRequest {
  string id = 1;
  message UpdateData {
    optional string title = 1;
    optional string description = 2;
    optional string parentId = 3;
  }
  UpdateData update = 2;
}

message UpdateTaskResponse {
  Meta meta = 1;
  optional int32 affected_row_count = 2;
}

message DeleteTaskRequest {
  string id = 1;
}

message DestroyTaskRequest {
  string id = 1;
}

message DestroyTaskResponse {
  Meta meta = 1;
  optional int32 destroyed_row_count = 2;
}

message GetAllTasksRequest {
  message Pagination {
    optional int32 limit = 1;
    optional int32 offset = 2;
  }
  optional Pagination pagination = 1;
  message Query {
    optional string title = 1;
    optional string parentId = 2;
  }
  optional Query query = 2;
  optional bool includeSubTasks = 3;
}

message GetAllTasksResponse {
  Meta meta = 1;
  repeated Task tasks = 2;
}