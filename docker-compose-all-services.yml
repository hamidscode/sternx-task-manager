version: '3.9' 

networks:
  sternx-task-manager:

services:
  postgres:
    image: postgres:16.1-alpine3.19
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: sternx
      POSTGRES_PASSWORD: sternx
      POSTGRES_DB: task_manager
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - sternx-task-manager

  rabbitmq:
    image: rabbitmq:3.12.12-management-alpine
    hostname: message_broker_rabbit
    networks:
      - sternx-task-manager
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    volumes:
      - rmq_volume:/var/lib/rabbitmq
      - rmq_log_volume:/var/log/rabbitmq

  dozzle:
    image: amir20/dozzle:latest
    networks:
      - sternx-task-manager
    ports:
      - "9999:8080"
    environment:
      DOZZLE_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ashland-service:
    image: reg.sternx.de/ashland:dev
    build:
      context: ./ashland
      dockerfile: Dockerfile
    networks:
      - sternx-task-manager
    depends_on:
      - rabbitmq
    environment:
      DEBUG: "true"
      NODE_ENV: "development"
      ENV_FILES: "false"
      LOG_DEBUG: "*"
      LOG_LEVEL: "trace"
      RMQ_HOST: "rabbitmq"
      RMQ_PORT: "5672"
      RMQ_USERNAME: "admin"
      RMQ_PASSWORD: "admin"

  gallatin-db_migrator:
    entrypoint: npx sequelize-cli db:migrate
    image: reg.sternx.de/gallatin:dev
    build:
      context: ./gallatin
      dockerfile: Dockerfile
    deploy:
      restart_policy:
        condition: none
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role ==  manager ]
    networks:
      - sternx-task-manager
    depends_on:
      - postgres
    environment:
      NODE_ENV: "development"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "sternx"
      POSTGRES_PASS: "sternx"
      POSTGRES_DB: "task_manager"

  gallatin-service:
    image: reg.sternx.de/gallatin:dev
    build:
      context: ./gallatin
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    networks:
      - sternx-task-manager
    depends_on:
      - postgres
      - rabbitmq
    environment:
      DEBUG: "true"
      NODE_ENV: "development"
      ENV_FILES: "false"
      LOG_DEBUG: "*"
      LOG_LEVEL: "trace"
      GRPC_PORT: "5000"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "sternx"
      POSTGRES_PASS: "sternx"
      POSTGRES_DB: "task_manager"
      RMQ_HOST: "rabbitmq"
      RMQ_PORT: "5672"
      RMQ_USERNAME: "admin"
      RMQ_PASSWORD: "admin"

  nasville-service:
    image: reg.sternx.de/nashville:dev
    build:
      context: ./nashville
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - sternx-task-manager
    depends_on:
      - gallatin-service
    environment:
      DEBUG: "true"
      NODE_ENV: "development"
      ENV_FILES: "false"
      LOG_DEBUG: "*"
      LOG_LEVEL: "trace"
      PORT: "3000"
      GALLATIN_GRPC_URL: "gallatin-service:5000"

volumes:
  postgres_volume:
  rmq_volume:
  rmq_log_volume: